package testOthers;import java.io.IOException;class Foo {	public void doStuff(int y, String s) {	}	public void moreThings(int x) {	}	public void doCommonStuff(Foo foo) throws Exception {		System.out.println("Parent doStuff(Foo foo)");	}	// If you keep it commented, Foo foo = new Foo();foo.doStuff(bar); will call	// the doStuff(Foo	// foo) method//	public void doCommonStuff(Bar bar) throws Exception {//		System.out.println("Parent doStuff(Bar bar)");//	}}public class Bar extends Foo {	public void doStuff(int y, long s) throws Exception {	}	// public void doStuff(int y, String s) throws Exception {	// }	public void doCommonStuff(Foo foo) throws Exception {		System.out.println("Child doStuff(Foo foo)");	}	public void doCommonStuff(Bar bar) throws Exception {		System.out.println("Child doStuff(Bar bar)");	}	public static void main(String[] args) throws Exception {		Foo foo = new Foo();		Foo fooParam = new Foo();		Bar bar = new Bar();		Bar barParam = new Bar();		foo.doCommonStuff(fooParam);		foo.doCommonStuff(barParam);		bar.doCommonStuff(fooParam);		bar.doCommonStuff(barParam);		System.out.println();		fooParam = new Bar();		foo.doCommonStuff(fooParam);		bar.doCommonStuff(fooParam);		System.out.println();		// Polymorphism starts		foo = new Bar();		fooParam = new Foo();		foo.doCommonStuff(fooParam);		foo.doCommonStuff(barParam);		bar.doCommonStuff(fooParam);		bar.doCommonStuff(barParam);		System.out.println();		fooParam = new Bar();		foo.doCommonStuff(fooParam);		bar.doCommonStuff(fooParam);		bar.doStuff(1, 1);	}}